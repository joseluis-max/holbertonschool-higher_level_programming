matrix_mul - module test
========================

Using matrix_divided
--------------------

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul


    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]


    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]


    >>> lazy_matrix_mul("string", [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list


    >>> lazy_matrix_mul([[3, 4], [5, 6]], "string")
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list


    >>> lazy_matrix_mul(["string"], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists


    >>> lazy_matrix_mul([[3, 4], [5, 6]], ["string"])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists


    >>> lazy_matrix_mul([], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty


    >>> lazy_matrix_mul([[], []], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty


    >>> lazy_matrix_mul([[3, 4], [5, 6]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty


    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[], []])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty


    >>> lazy_matrix_mul([["hey!", 4], ["5", 6]], [[2, 3], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats


    >>> lazy_matrix_mul([[3, 4], [5, 6]], [["2", 3], [5, "6"]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats


    >>> lazy_matrix_mul([[3, 4, 6], [5, 6]], [[2, 3], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_a must be of the same size


    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[2, 3], [5, 6, 8, 9]])
    Traceback (most recent call last):
        ...
    TypeError: each row of m_b must be of the same size


    >>> lazy_matrix_mul([[3, 4], [5, 6]], [[2, 3], [5, 6], [4, 5]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied
